<?php
/**
 * @file
 *
 * Different custom configs for Cinema Search site.
 */

/**
 * Implements hook_menu().
 */
function custom_menu() {
  return [
    'search/%/%/%ctools_js' => [
      'page callback' => 'custom_film_popup',
      'page arguments' => [1, 2, 3],
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ],
  ];
}

/**
 * Implements hook_theme().
 */
function custom_theme($existing, $type, $theme, $path) {
  $templates = drupal_get_path('theme', 'movies') . '/templates';

  return [
    'trailer' => [
      'variables' => [
        'hash' => NULL,
      ],
      'path' => $templates,
      'template' => 'trailer',
    ],
  ];
}

/**
 * Provides form with buttons for search and get random movie.
 */
function custom_action_buttons_form($form, &$form_state) {
  $form['action_buttons'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => ['action-buttons'],
    ],
  ];
  // Filters button.
  $form['action_buttons']['search_button'] = [
    '#type' => 'container',
    '#attributes' => [
      'class' => [
        'action-button',
        'filters-collapsed-button',
        'icon',
        'icon-search',
      ],
    ],
  ];
  // Get random movie button.
  $form['action_buttons']['random_button'] = [
    '#type' => 'button',
    '#name' => 'get_random',
    '#ajax' => [
      'callback' => 'custom_get_random_film_ajax_callback',
      'wrapper' => 'films-outer-wrapper',
      'progress' => FALSE,
    ],
    '#attributes' => [
      'class' => [
        'action-button',
        'get-random-button',
        'icon',
        'icon-dice',
      ],
    ],
  ];
  // Reset button.
  $form['action_buttons']['reset_button'] = [
    '#type' => 'submit',
    '#attributes' => [
      'class' => [
        'action-button',
        'reset-button',
        'icon',
        'icon-reload',
      ],
    ],
  ];

  return $form;
}

/**
 * Replace view content by random node.
 */
function custom_get_random_film_ajax_callback() {
  global $language;

  $query = db_select('node', 'n')
    ->fields('n', ['nid'])
    ->condition('language', $language->language)
    ->orderRandom()
    ->execute()
    ->fetchObject();

  $node = node_load($query->nid);

  $render = node_view($node, 'teaser');

  $commands = [];
  $commands[] = ajax_command_html('#films-outer-wrapper', drupal_render($render));
  $commands[] = ajax_command_css('.filters-collapsed-button', ['display' => 'none']);

  return ['#type' => 'ajax', '#commands' => $commands];
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_form_views_exposed_form_alter(&$form, &$form_state) {
  // Set placeholders to exposed search block.
  $form['title']['#attributes'] = ['placeholder' => t('Title')];
  $form['field_year_single']['#attributes'] = ['placeholder' => t('Single year')];
  $form['field_year_range']['min']['#attributes'] = ['placeholder' => t('Min year')];
  $form['field_year_range']['max']['#attributes'] = ['placeholder' => t('Max year')];

  // Multilingual select lists.
  $select_list_fields = [
    'field_genre_tid',
    'field_director_tid',
    'field_actors_tid',
  ];
  foreach ($select_list_fields as $field_name) {
    // Translate select list values.
    foreach ($form[$field_name]['#options'] as $key => $value) {
      $form[$field_name]['#options'][$key] = t($value);
    }
  }
}

/**
 * Implements hook_node_view_alter().
 *
 * @throws \Exception
 */
function custom_node_view_alter(&$build) {
  if ($build['#entity_type'] == 'node' && $build['#bundle'] == 'film' && $build['#view_mode'] == 'teaser') {
    if (!isset($build['field_poster_image'])) {
      $build['field_poster_image'] = [
        '#type' => 'container',
        '#attributes' => [
          'class' => [
            'field-name-field-poster-image',
          ],
        ],
      ];
      $build['field_poster_image'][] = [
        '#markup' => theme('image', [
          'path' => drupal_get_path('theme', 'movies') . '/images/nopicture.gif',
        ]),
      ];
    }

    // Set poster as link on popup with movie details.
    $build['field_poster_image'][0]['#path'] = [
      'path' => 'search/' . $build['#node']->nid . '/details/nojs',
      'options' => [
        'attributes' => [
          'class' => [
            'ctools-use-modal',
            'ctools-modal-film-popup-style',
          ],
        ],
      ],
    ];

    $build['links'] = [
      '#type' => 'container',
      '#attributes' => [
        'class' => ['movie-teaser-links'],
      ],
    ];
    $build['links']['details'] = [
      '#type' => 'link',
      '#title' => t('Details'),
      '#href' => 'search/' . $build["#node"]->nid . '/details/nojs',
      '#attributes' => [
        'class' => ['ctools-use-modal', 'ctools-modal-film-popup-style'],
      ],
    ];
    if (!empty($build["#node"]->field_trailer)) {
      $build['links']['trailer'] = [
        '#type' => 'link',
        '#title' => t('Trailer'),
        '#href' => 'search/' . $build["#node"]->nid . '/trailer/nojs',
        '#attributes' => [
          'class' => ['ctools-use-modal', 'ctools-modal-film-popup-style'],
        ],
      ];
    }
  }
}

/**
 * Popup's content.
 *
 * @param $nid
 *  Node ID.
 * @param $display
 *  Expected "details" or "trailer".
 * @param $js
 *  Ctools parameter for check is javascript enabled on browser.
 *
 * @return array
 * @throws \Exception
 */
function custom_film_popup($nid, $display, $js) {
  switch ($display) {
    case 'details':
      $popup_content = node_view(node_load($nid), 'popup');
      break;

    case 'trailer':
      $node = node_load($nid);
      $trailer = $node->field_trailer[LANGUAGE_NONE][0]['value'];
      $popup_content = theme('trailer', ['hash' => $trailer]);
      break;

    default:
      throw new Exception(t('Wrong display type "@d".', ['@d' => $display]));
      break;
  }

  if (!$js) {
    return $popup_content;
  }

  ctools_include('modal');
  ctools_include('ajax');

  $output = [];
  $output[] = ctools_modal_command_display('', $popup_content);

  print ajax_render($output);
  drupal_exit();
}

/**
 * Popup's settings function.
 */
function custom_film_popup_style() {
  static $added = FALSE;
  if ($added == FALSE) {
    $added = TRUE;

    ctools_include('modal');
    ctools_include('ajax');
    ctools_modal_add_js();

    $popup_style = [
      'film-popup-style' => [
        'modalSize' => [
          'type' => 'fixed',
          'width' => 900,
          'height' => 'auto',
        ],
        'modalOptions' => [
          'opacity' => (float) 0.8,
          'background-color' => '#17222b',
        ],
        'animation' => 'fadeIn',
        'modalTheme' => 'filmTheme',
        'animationSpeed' => 'slow',
      ],
    ];

    drupal_add_js($popup_style, 'setting');
    ctools_add_js('film_popup_style', 'custom');
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function custom_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['popup'] = [
    'label' => t('Popup'),
    'custom settings' => TRUE,
  ];
}
