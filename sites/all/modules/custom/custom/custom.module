<?php
/**
 * @file
 *
 * Different custom configs for Cinema Search site.
 */

/**
 * Implements hook_menu().
 */
function custom_menu() {
  return [
    'ajax/node/random' => [
      'page callback' => 'custom_ajax_random_node_callback',
      'page arguments' => [2],
      'type' => MENU_CALLBACK,
      'delivery callback' => 'custom_ajax_delivery_callback',
      'access callback' => TRUE,
    ],
    'search/%/%ctools_js' => [
      'page callback' => 'custom_film_popup',
      'page arguments' => [1, 2],
      'access callback' => TRUE,
      'type' => MENU_CALLBACK,
    ],
  ];
}

/**
 * Ajax callback returns random node.
 */
function custom_ajax_random_node_callback() {
  $query = db_select('node', 'n')
    ->fields('n', ['nid'])
    ->orderRandom()
    ->execute()
    ->fetchObject();

  $node = node_load($query->nid);

  return node_view($node, 'teaser');
}

/**
 * Ajax delivery callback render content.
 *
 * @param $content
 */
function custom_ajax_delivery_callback($content) {
  print drupal_render($content);
  drupal_page_footer();
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function custom_form_views_exposed_form_alter(&$form, &$form_state) {
  // Set placeholders to exposed search block.
  $form['title']['#attributes'] = ['placeholder' => t('Title')];
  $form['field_year_single']['#attributes'] = ['placeholder' => t('Single year')];
  $form['field_year_range']['min']['#attributes'] = ['placeholder' => t('Min year')];
  $form['field_year_range']['max']['#attributes'] = ['placeholder' => t('Max year')];
}

/**
 * Implements hook_node_view_alter().
 */
function custom_node_view_alter(&$build) {
  if ($build['#entity_type'] == 'node' && $build['#bundle'] == 'film' && $build['#view_mode'] == 'teaser') {
    try {
      if (!isset($build['field_poster_image'])) {
        $build['field_poster_image'] = [
          '#type' => 'container',
          '#attributes' => [
            'class' => [
              'field-name-field-poster-image',
            ],
          ],
        ];
        $build['field_poster_image'][] = [
          '#markup' => theme('image', [
            'path' => drupal_get_path('theme', 'movies') . '/images/nopicture.gif',
          ]),
        ];
      }
    } catch (Exception $_) {
    }
  }
}

/**
 * Popup's content.
 *
 * @param $nid
 *  Node ID.
 * @param $js
 *  Ctools parameter for check is javascript enabled on browser.
 *
 * @return array
 */
function custom_film_popup($nid, $js) {
  $popup_content = node_view(node_load($nid), 'popup');

  if (!$js) {
    return $popup_content;
  }

  ctools_include('modal');
  ctools_include('ajax');

  $output = [];
  $output[] = ctools_modal_command_display('', $popup_content);

  print ajax_render($output);
  drupal_exit();
}

/**
 * Popup's settings function.
 */
function custom_film_popup_style() {
  static $added = FALSE;
  if ($added == FALSE) {
    $added = TRUE;

    ctools_include('modal');
    ctools_include('ajax');
    ctools_modal_add_js();

    $popup_style = [
      'film-popup-style' => [
        'modalSize' => [
          'type' => 'fixed',
          'width' => 500,
          'height' => 'auto',
        ],
        'modalOptions' => [
          'opacity' => (float) 0.8,
          'background-color' => '#17222b',
        ],
        'animation' => 'fadeIn',
        'modalTheme' => 'filmTheme',
        'animationSpeed' => 'slow',
      ],
    ];

    drupal_add_js($popup_style, 'setting');
    ctools_add_js('film_popup_style', 'custom');
  }
}

/**
 * Implements hook_entity_info_alter().
 */
function custom_entity_info_alter(&$entity_info) {
  $entity_info['node']['view modes']['popup'] = [
    'label' => t('Popup'),
    'custom settings' => TRUE,
  ];
}
